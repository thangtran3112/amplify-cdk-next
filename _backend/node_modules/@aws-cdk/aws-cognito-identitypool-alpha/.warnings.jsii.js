function _aws_cdk_aws_cognito_identitypool_alpha_IIdentityPool(p) {
}
function _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authenticationProviders))
            _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolAuthenticationProviders(p.authenticationProviders);
        if (p.roleMappings != null)
            for (const o of p.roleMappings)
                if (!visitedObjects.has(o))
                    _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolRoleMapping(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolProviderType(p) {
}
function _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolProviderUrl(p) {
}
function _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolAmazonLoginProvider(p) {
}
function _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolFacebookLoginProvider(p) {
}
function _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolAppleLoginProvider(p) {
}
function _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolGoogleLoginProvider(p) {
}
function _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolTwitterLoginProvider(p) {
}
function _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolDigitsLoginProvider(p) {
}
function _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolProviders(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.amazon))
            _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolAmazonLoginProvider(p.amazon);
        if (!visitedObjects.has(p.apple))
            _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolAppleLoginProvider(p.apple);
        if (!visitedObjects.has(p.digits))
            _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolDigitsLoginProvider(p.digits);
        if (!visitedObjects.has(p.facebook))
            _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolFacebookLoginProvider(p.facebook);
        if (!visitedObjects.has(p.google))
            _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolGoogleLoginProvider(p.google);
        if (!visitedObjects.has(p.twitter))
            _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolTwitterLoginProvider(p.twitter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolAuthenticationProviders(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.openIdConnectProviders != null)
            for (const o of p.openIdConnectProviders)
                if (!visitedObjects.has(o))
                    require("aws-cdk-lib/.warnings.jsii.js").aws_cdk_lib_aws_iam_IOpenIdConnectProvider(o);
        if (p.samlProviders != null)
            for (const o of p.samlProviders)
                if (!visitedObjects.has(o))
                    require("aws-cdk-lib/.warnings.jsii.js").aws_cdk_lib_aws_iam_ISamlProvider(o);
        if (p.userPools != null)
            for (const o of p.userPools)
                if (!visitedObjects.has(o))
                    _aws_cdk_aws_cognito_identitypool_alpha_IUserPoolAuthenticationProvider(o);
        if (!visitedObjects.has(p.amazon))
            _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolAmazonLoginProvider(p.amazon);
        if (!visitedObjects.has(p.apple))
            _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolAppleLoginProvider(p.apple);
        if (!visitedObjects.has(p.digits))
            _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolDigitsLoginProvider(p.digits);
        if (!visitedObjects.has(p.facebook))
            _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolFacebookLoginProvider(p.facebook);
        if (!visitedObjects.has(p.google))
            _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolGoogleLoginProvider(p.google);
        if (!visitedObjects.has(p.twitter))
            _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolTwitterLoginProvider(p.twitter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_cognito_identitypool_alpha_IdentityPool(p) {
}
function _aws_cdk_aws_cognito_identitypool_alpha_IIdentityPoolRoleAttachment(p) {
}
function _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolRoleAttachmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.identityPool))
            _aws_cdk_aws_cognito_identitypool_alpha_IIdentityPool(p.identityPool);
        if (p.roleMappings != null)
            for (const o of p.roleMappings)
                if (!visitedObjects.has(o))
                    _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolRoleMapping(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolRoleMapping(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.providerUrl))
            _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolProviderUrl(p.providerUrl);
        if (p.rules != null)
            for (const o of p.rules)
                if (!visitedObjects.has(o))
                    _aws_cdk_aws_cognito_identitypool_alpha_RoleMappingRule(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_cognito_identitypool_alpha_RoleMappingMatchType(p) {
}
function _aws_cdk_aws_cognito_identitypool_alpha_RoleMappingRule(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.matchType))
            _aws_cdk_aws_cognito_identitypool_alpha_RoleMappingMatchType(p.matchType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolRoleAttachment(p) {
}
function _aws_cdk_aws_cognito_identitypool_alpha_IUserPoolAuthenticationProvider(p) {
}
function _aws_cdk_aws_cognito_identitypool_alpha_UserPoolAuthenticationProviderProps(p) {
}
function _aws_cdk_aws_cognito_identitypool_alpha_UserPoolAuthenticationProviderBindOptions(p) {
}
function _aws_cdk_aws_cognito_identitypool_alpha_UserPoolAuthenticationProviderBindConfig(p) {
}
function _aws_cdk_aws_cognito_identitypool_alpha_UserPoolAuthenticationProvider(p) {
}
function print(name, deprecationMessage) {
    const deprecated = process.env.JSII_DEPRECATED;
    const deprecationMode = ["warn", "fail", "quiet"].includes(deprecated) ? deprecated : "warn";
    const message = `${name} is deprecated.\n  ${deprecationMessage.trim()}\n  This API will be removed in the next major release.`;
    switch (deprecationMode) {
        case "fail":
            throw new DeprecationError(message);
        case "warn":
            console.warn("[WARNING]", message);
            break;
    }
}
function getPropertyDescriptor(obj, prop) {
    const descriptor = Object.getOwnPropertyDescriptor(obj, prop);
    if (descriptor) {
        return descriptor;
    }
    const proto = Object.getPrototypeOf(obj);
    const prototypeDescriptor = proto && getPropertyDescriptor(proto, prop);
    if (prototypeDescriptor) {
        return prototypeDescriptor;
    }
    return {};
}
const visitedObjects = new Set();
class DeprecationError extends Error {
    constructor(...args) {
        super(...args);
        Object.defineProperty(this, "name", {
            configurable: false,
            enumerable: true,
            value: "DeprecationError",
            writable: false,
        });
    }
}
module.exports = { print, getPropertyDescriptor, DeprecationError, _aws_cdk_aws_cognito_identitypool_alpha_IIdentityPool, _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolProps, _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolProviderType, _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolProviderUrl, _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolAmazonLoginProvider, _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolFacebookLoginProvider, _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolAppleLoginProvider, _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolGoogleLoginProvider, _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolTwitterLoginProvider, _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolDigitsLoginProvider, _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolProviders, _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolAuthenticationProviders, _aws_cdk_aws_cognito_identitypool_alpha_IdentityPool, _aws_cdk_aws_cognito_identitypool_alpha_IIdentityPoolRoleAttachment, _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolRoleAttachmentProps, _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolRoleMapping, _aws_cdk_aws_cognito_identitypool_alpha_RoleMappingMatchType, _aws_cdk_aws_cognito_identitypool_alpha_RoleMappingRule, _aws_cdk_aws_cognito_identitypool_alpha_IdentityPoolRoleAttachment, _aws_cdk_aws_cognito_identitypool_alpha_IUserPoolAuthenticationProvider, _aws_cdk_aws_cognito_identitypool_alpha_UserPoolAuthenticationProviderProps, _aws_cdk_aws_cognito_identitypool_alpha_UserPoolAuthenticationProviderBindOptions, _aws_cdk_aws_cognito_identitypool_alpha_UserPoolAuthenticationProviderBindConfig, _aws_cdk_aws_cognito_identitypool_alpha_UserPoolAuthenticationProvider };
